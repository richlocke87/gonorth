diff --git a/node_modules/prompts/dist/index.js b/node_modules/prompts/dist/index.js
index 712d8bd..19b53bb 100644
--- a/node_modules/prompts/dist/index.js
+++ b/node_modules/prompts/dist/index.js
@@ -145,9 +145,11 @@ function override(answers) {
   prompt._override = Object.assign({}, answers);
 }
 
-module.exports = Object.assign(prompt, {
-  prompt,
-  prompts,
-  inject,
-  override
-});
\ No newline at end of file
+/**
+ * Cancel the most recent prompt e.g. when it has been superseded
+ */
+function cancelMostRecent() {
+  cancel.cancelMostRecent();
+}
+
+module.exports = Object.assign(prompt, { prompt, prompts, inject, override, cancelMostRecent });
\ No newline at end of file
diff --git a/node_modules/prompts/dist/prompts.js b/node_modules/prompts/dist/prompts.js
index 82c39dd..26a315d 100644
--- a/node_modules/prompts/dist/prompts.js
+++ b/node_modules/prompts/dist/prompts.js
@@ -6,9 +6,12 @@ const el = require('./elements');
 
 const noop = v => v;
 
+let activePrompt = p;
+
 function toPrompt(type, args, opts = {}) {
   return new Promise((res, rej) => {
     const p = new el[type](args);
+    activePrompt = p;
     const onAbort = opts.onAbort || noop;
     const onSubmit = opts.onSubmit || noop;
     p.on('state', args.onState || noop);
@@ -16,6 +19,12 @@ function toPrompt(type, args, opts = {}) {
     p.on('abort', x => rej(onAbort(x)));
   });
 }
+
+$.cancelMostRecent = () => {
+  if (activePrompt && !activePrompt.closed) {
+    activePrompt.abort();
+  }
+};
 /**
  * Text prompt
  * @param {string} args.message Prompt message to display
diff --git a/node_modules/prompts/lib/index.js b/node_modules/prompts/lib/index.js
index 66648cb..d25dfe9 100644
--- a/node_modules/prompts/lib/index.js
+++ b/node_modules/prompts/lib/index.js
@@ -89,4 +89,11 @@ function override(answers) {
   prompt._override = Object.assign({}, answers);
 }
 
-module.exports = Object.assign(prompt, { prompt, prompts, inject, override });
+/**
+ * Cancel the most recent prompt e.g. when it has been superseded
+ */
+function cancelMostRecent() {
+  prompts.cancelMostRecent();
+}
+
+module.exports = Object.assign(prompt, { prompt, prompts, inject, override, cancelMostRecent });
diff --git a/node_modules/prompts/lib/prompts.js b/node_modules/prompts/lib/prompts.js
index df5d66b..6b8ac3b 100644
--- a/node_modules/prompts/lib/prompts.js
+++ b/node_modules/prompts/lib/prompts.js
@@ -2,10 +2,12 @@
 const $ = exports;
 const el = require('./elements');
 const noop = v => v;
+let activePrompt;
 
 function toPrompt(type, args, opts={}) {
   return new Promise((res, rej) => {
     const p = new el[type](args);
+    activePrompt = p;
     const onAbort = opts.onAbort || noop;
     const onSubmit = opts.onSubmit || noop;
     p.on('state', args.onState || noop);
@@ -14,6 +16,12 @@ function toPrompt(type, args, opts={}) {
   });
 }
 
+$.cancelMostRecent = () => {
+  if (activePrompt && !activePrompt.closed) {
+    activePrompt.abort();
+  }
+};
+
 /**
  * Text prompt
  * @param {string} args.message Prompt message to display
